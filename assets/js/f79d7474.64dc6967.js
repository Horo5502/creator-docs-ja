"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[8605],{21381:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/udon-sharp-settings-427fdcaabd82892c348dabb98f8ddd04.png"},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},92590:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"worlds/udon/udonsharp/configuration","title":"Configuration","description":"UdonSharp\'s settings can be found at Edit > Project Settings > Udon Sharp.","source":"@site/docs/worlds/udon/udonsharp/configuration.md","sourceDirName":"worlds/udon/udonsharp","slug":"/worlds/udon/udonsharp/configuration","permalink":"/creator-docs_ja/worlds/udon/udonsharp/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1723066495000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Class Exposure Tree","permalink":"/creator-docs_ja/worlds/udon/udonsharp/class-exposure-tree"},"next":{"title":"Editor Scripting","permalink":"/creator-docs_ja/worlds/udon/udonsharp/editorscripting"}}');var o=i(74848),r=i(28453);const s={},d="Configuration",l={},a=[{value:"Udon Sharp",id:"udon-sharp",level:2},{value:"Auto compile on modify",id:"auto-compile-on-modify",level:3},{value:"Compile all script",id:"compile-all-script",level:3},{value:"Compile on focus",id:"compile-on-focus",level:3},{value:"Script template override",id:"script-template-override",level:3},{value:"Debugging",id:"debugging",level:2},{value:"Debug build",id:"debug-build",level:3},{value:"Inline Code",id:"inline-code",level:3},{value:"Listen for client exceptions",id:"listen-for-client-exceptions",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,o.jsxs)(n.p,{children:["UdonSharp's settings can be found at ",(0,o.jsx)(n.code,{children:"Edit > Project Settings > Udon Sharp"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"UdonSharp Settings window",src:i(21381).A+"",width:"693",height:"479"})}),"\n",(0,o.jsx)(n.h2,{id:"udon-sharp",children:"Udon Sharp"}),"\n",(0,o.jsx)(n.h3,{id:"auto-compile-on-modify",children:"Auto compile on modify"}),"\n",(0,o.jsx)(n.p,{children:"Having this enabled will automatically compile scripts when they are modified and saved."}),"\n",(0,o.jsx)(n.h3,{id:"compile-all-script",children:"Compile all script"}),"\n",(0,o.jsx)(n.p,{children:"Compiles all scripts whenever changes are detected to a U# script."}),"\n",(0,o.jsx)(n.h3,{id:"compile-on-focus",children:"Compile on focus"}),"\n",(0,o.jsx)(n.p,{children:"Will only compile when the editor gets focused and changes have been made to a script."}),"\n",(0,o.jsx)(n.h3,{id:"script-template-override",children:"Script template override"}),"\n",(0,o.jsxs)(n.p,{children:["You can define your own custom template to be used when creating U# scripts.\r\nThis can be done by dragging a script into the ",(0,o.jsx)(n.code,{children:"Script template override"})," field and that will now be used when you create a new U# script."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"<TemplateClassName>"})," can be used to set the class name based on the file name you give."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Default Template"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cs",children:"using UdonSharp;\r\nusing UnityEngine;\r\nusing VRC.SDKBase;\r\nusing VRC.Udon;\r\n\r\npublic class <TemplateClassName> : UdonSharpBehaviour\r\n{\r\n    void Start()\r\n    {\r\n        \r\n    }\r\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,o.jsx)(n.h3,{id:"debug-build",children:"Debug build"}),"\n",(0,o.jsxs)(n.p,{children:["Enables or disabled ",(0,o.jsx)(n.code,{children:"Inline Code"})," and ",(0,o.jsx)(n.code,{children:"Listen for client exceptions"})]}),"\n",(0,o.jsx)(n.h3,{id:"inline-code",children:"Inline Code"}),"\n",(0,o.jsx)(n.p,{children:"Includes the C# inline code in the generated assembly code."}),"\n",(0,o.jsx)(n.h3,{id:"listen-for-client-exceptions",children:"Listen for client exceptions"}),"\n",(0,o.jsx)(n.p,{children:"This will listen for exceptions from the output log the VRChat client makes, then try to match it up against scripts in the project."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/vrchat-community/UdonSharp/wiki/class-exposure-tree",children:"Read more here on how to set it up"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);