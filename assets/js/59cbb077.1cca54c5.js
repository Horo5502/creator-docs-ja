"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[7798],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(96540);const s={},a=r.createContext(s);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(a.Provider,{value:n},e.children)}},43290:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"worlds/udon/persistence/player-object","title":"PlayerObject","description":"PlayerObjects allow you to automatically give each player who joins your world a copy of a GameObject, such as a flashlight, a health bar, or a sword.","source":"@site/docs/worlds/udon/persistence/player-object.md","sourceDirName":"worlds/udon/persistence","slug":"/worlds/udon/persistence/player-object","permalink":"/creator-docs_ja/worlds/udon/persistence/player-object","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1736199356000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PlayerData","permalink":"/creator-docs_ja/worlds/udon/persistence/player-data"},"next":{"title":"String Loading","permalink":"/creator-docs_ja/worlds/udon/string-loading"}}');var s=t(74848),a=t(28453);const l={},o="PlayerObject",i={},c=[{value:"Setup",id:"setup",level:2},{value:"Loading Persistent User Data",id:"loading-persistent-user-data",level:2},{value:"Ownership",id:"ownership",level:2},{value:"PlayerObject Templates",id:"playerobject-templates",level:2},{value:"Events",id:"events",level:2},{value:"Methods",id:"methods",level:2},{value:"Examples",id:"examples",level:2},{value:"Finding a custom script on a PlayerObject",id:"finding-a-custom-script-on-a-playerobject",level:3},{value:"Finding a component on a PlayerObject",id:"finding-a-component-on-a-playerobject",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"playerobject",children:"PlayerObject"})}),"\n",(0,s.jsx)(n.p,{children:"PlayerObjects allow you to automatically give each player who joins your world a copy of a GameObject, such as a flashlight, a health bar, or a sword."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"VRChat automatically spawns a copy of the GameObject for each player when they join your world."}),"\n",(0,s.jsx)(n.li,{children:"The copy includes all components and child GameObjects."}),"\n",(0,s.jsxs)(n.li,{children:["The copy spawns with the same position, rotation, scale and parent as the original ",(0,s.jsx)(n.a,{href:"#playerobject-templates",children:"PlayerObject Template"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.p,{children:"Follow the instructions below to create a simple PlayerObject. When a player joins an instance, VRChat will spawn the PlayerObject for them."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create a GameObject in your scene's hierarchy."}),"\n",(0,s.jsxs)(n.li,{children:["Add the ",(0,s.jsx)(n.code,{children:"VRCPlayerObject"})," component","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This turns your GameObject into a PlayerObject ",(0,s.jsx)(n.a,{href:"#playerobject-templates",children:"template"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["(Optional) Add an ",(0,s.jsx)(n.code,{children:"UdonBehaviour"})," component to the GameObject (or one of its children)."]}),"\n",(0,s.jsxs)(n.li,{children:["(Optional) Add the ",(0,s.jsx)(n.code,{children:"VRCEnablePersistence"})," to the same GameObject as the ",(0,s.jsx)(n.code,{children:"UdonBehaviour"})," if you want synced variables to persist."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"loading-persistent-user-data",children:"Loading Persistent User Data"}),"\n",(0,s.jsx)(n.p,{children:"VRChat automatically loads Persistent User Data on PlayerObject that fulfill these conditions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The PlayerObject (or a child GameObject) has an ",(0,s.jsx)(n.code,{children:"UdonBehaviour"})," component."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"UdonBehaviour"})," has synced variables."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"UdonBehaviour"}),"'s GameObject also has a ",(0,s.jsx)(n.code,{children:"VRCEnablePersistence"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.a,{href:"/worlds/udon/graph/event-nodes#onplayerrestored",children:(0,s.jsx)(n.code,{children:"OnPlayerRestored"})})," to detect that a PlayerObject has finished loading User Data. This event is executed once for every player in the instance, including the owner of the PlayerObject."]}),"\n",(0,s.jsx)(n.p,{children:"OnPlayerRestored includes a reference to the player whose data was just restored. You can use this to make the Owner of the GameObject initialize variables or execute events."}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.code,{children:"Start"})," and ",(0,s.jsx)(n.code,{children:"OnDeserialization"})," events, ownership is guaranteed to be correct. However, you should avoid reading or writing a PlayerObject's User Data before the ",(0,s.jsx)(n.code,{children:"OnPlayerRestored"})," event. You might accidently read or write outdated User Data, and your changes may be overwritten when User Data is received from VRChat's server."]}),"\n",(0,s.jsx)(n.h2,{id:"ownership",children:"Ownership"}),"\n",(0,s.jsxs)(n.p,{children:["When players own a PlayerObject, they also own all GameObjects with synced ",(0,s.jsx)(n.code,{children:"UdonBehaviours"})," within their PlayerObject. They cannot transfer them to anyone else."]}),"\n",(0,s.jsx)(n.p,{children:'This is convenient for giving players tools or pickups that can never be "stolen" by other players. You can guarantee that they will always own their own PlayerObjects.'}),"\n",(0,s.jsx)(n.h2,{id:"playerobject-templates",children:"PlayerObject Templates"}),"\n",(0,s.jsxs)(n.p,{children:["PlayerObject templates are the original GameObjects that you create in the editor by adding a ",(0,s.jsx)(n.code,{children:"VRCPlayerObject"}),". VRChat copies your Template to spawn PlayerObjects."]}),"\n",(0,s.jsx)(n.p,{children:"Components on Templates and PlayerObjects can contain references to other components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Templates can reference their own components or child components."}),"\n",(0,s.jsx)(n.li,{children:"Templates can reference other components in your scene."}),"\n",(0,s.jsxs)(n.li,{children:["Components in your scene can ",(0,s.jsx)(n.strong,{children:"not"})," reference Templates.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Instead, your scene objects must use direct references to spawned PlayerObjects."}),"\n",(0,s.jsx)(n.li,{children:"Templates are automatically disabled by VRChat, but still exist in the scene."}),"\n",(0,s.jsx)(n.li,{children:"Do not modify, destroy, or edit your Template after it has been disabled! This may cause errors or unexpected behaviour."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use the following methods in your scripts to find references to PlayerObjects and their components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"Networking.GetPlayerObjects"})," to get all the PlayerObjects associated with a player, then sort through that array and find the specific thing you are looking for."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"Networking.FindComponentInPlayerObjects"})," to translate a reference from a PlayerObject template into a specific player's PlayerObject."]}),"\n",(0,s.jsxs)(n.li,{children:["See the ",(0,s.jsx)(n.a,{href:"#examples",children:"examples"})," below."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,s.jsx)(n.p,{children:"There is only one event related to PlayerObjects:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Event"}),(0,s.jsx)(n.th,{children:"Output"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/worlds/udon/graph/event-nodes#onplayerrestored",children:"OnPlayerRestored"})}),(0,s.jsx)(n.td,{children:"VRCPlayerApi player"}),(0,s.jsx)(n.td,{children:"Triggered after all of a VRChat player's persistent data has been loaded."})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(n.p,{children:["PlayerObject methods are in the ",(0,s.jsx)(n.code,{children:"VRC.SDKBase.Networking"})," namespace."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Function"}),(0,s.jsx)(n.th,{children:"Input"}),(0,s.jsx)(n.th,{children:"Output"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"GetPlayerObjects"}),(0,s.jsx)(n.td,{children:"VRCPlayerApi target"}),(0,s.jsx)(n.td,{children:"GameObject[] objects"}),(0,s.jsx)(n.td,{children:"Returns an array of all the PlayerObjects associated with the player provided"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"FindComponentInPlayerObjects"}),(0,s.jsx)(n.td,{children:"VRCPlayerApi player, Component referenceComponent"}),(0,s.jsx)(n.td,{children:"Component"}),(0,s.jsxs)(n.td,{children:["Using the ",(0,s.jsx)(n.code,{children:"referenceComponent"})," which must be a child of a PlayerObject template, this function returns the corresponding component associated with the provided player."]})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Utility wrappers to these methods are found on the ",(0,s.jsx)(n.code,{children:"VRCPlayerApi"})," class."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Function"}),(0,s.jsx)(n.th,{children:"Input"}),(0,s.jsx)(n.th,{children:"Output"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"GetPlayerObjects"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"GameObject[] objects"}),(0,s.jsx)(n.td,{children:"Returns an array of all the PlayerObjects associated with the provided player."})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"finding-a-custom-script-on-a-playerobject",children:"Finding a custom script on a PlayerObject"}),"\n",(0,s.jsxs)(n.p,{children:["This example automatically looks through all PlayerObjects and finds a specific component that you're looking for. Replace ",(0,s.jsx)(n.code,{children:"CustomPlayerObjectScript"})," with the type of component that you want to find."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:"public CustomPlayerObjectScript Find(VRCPlayerApi player)\r\n{\r\n    var objects = Networking.GetPlayerObjects(player);\r\n    for (int i = 0; i < objects.Length; i++)\r\n    {\r\n        if (!Utilities.IsValid(objects[i])) continue;\r\n        CustomPlayerObjectScript foundScript = objects[i].GetComponentInChildren<CustomPlayerObjectScript>();\r\n        if (Utilities.IsValid(foundScript)) return foundScript;\r\n    }\r\n    return null;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"finding-a-component-on-a-playerobject",children:"Finding a component on a PlayerObject"}),"\n",(0,s.jsxs)(n.p,{children:["This example will use the ",(0,s.jsx)(n.code,{children:"FindComponentInPlayerObjects"})," function to translate a reference from the PlayerObject template into a reference from a specific player's PlayerObject."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cs",children:"public Transform referenceChildTransform; // A reference to a Transform on a PlayerObject or a child of a PlayerObject\r\n\r\npublic void Find(VRCPlayerApi targetPlayer)\r\n{\r\n    Component foundComponent = Networking.FindComponentInPlayerObjects(targetPlayer, referenceChildTransform);\r\n    // foundComponent will be of type Transform and will correspond to the targetPlayer's PlayerObject that matches the reference.\r\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);