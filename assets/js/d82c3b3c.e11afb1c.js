"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[191],{11293:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"worlds/examples/persistence/post-processing-settings","title":"Post-Processing Settings","description":"Save and load bloom settings with PlayerData.","source":"@site/docs/worlds/examples/persistence/post-processing-settings.md","sourceDirName":"worlds/examples/persistence","slug":"/worlds/examples/persistence/post-processing-settings","permalink":"/creator-docs_ja/worlds/examples/persistence/post-processing-settings","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1732237450000,"frontMatter":{"description":"Save and load bloom settings with PlayerData.","sidebar_custom_props":{"customIcon":"\ud83c\udf9a\ufe0f"}},"sidebar":"tutorialSidebar","previous":{"title":"Position Sync","permalink":"/creator-docs_ja/worlds/examples/persistence/position-sync"},"next":{"title":"Simple RPG","permalink":"/creator-docs_ja/worlds/examples/persistence/simple-rpg"}}');var i=s(74848),o=s(28453),r=s(80389);const a={description:"Save and load bloom settings with PlayerData.",sidebar_custom_props:{customIcon:"\ud83c\udf9a\ufe0f"}},l="Post-Processing Settings",c={},d=[{value:"Using the Example",id:"using-the-example",level:2},...r.RM,{value:"Technical Breakdown",id:"technical-breakdown",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"post-processing-settings",children:"Post-Processing Settings"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Persistent Post-Processing Settings World Preview",src:s(76633).A+"",width:"770",height:"431"})}),"\n",(0,i.jsx)(t.p,{children:"This scene saves and loads its bloom settings by saving the weight of a PostProcessing Volume into PlayerData."}),"\n",(0,i.jsxs)(t.p,{children:["Visit the ",(0,i.jsx)(t.a,{href:"https://vrchat.com/home/world/wrld_ccc0b71a-63ea-4476-bcc2-25dd1b24745d",children:"Persistence Post-Processing Settings Example World"})," to try it for yourself!"]}),"\n",(0,i.jsx)(t.h2,{id:"using-the-example",children:"Using the Example"}),"\n",(0,i.jsx)(t.p,{children:'Play the scene, and use the "Post-Processing Weight" slider to set the Bloom level. It should appear in your ClientSim PlayerData window as a float named "settings_pp_weight".'}),"\n",(0,i.jsx)(r.Ay,{}),"\n",(0,i.jsx)(t.h2,{id:"technical-breakdown",children:"Technical Breakdown"}),"\n",(0,i.jsx)(t.p,{children:'There is an UdonSharp script called "UdonPostProcessing" on a GameObject with the same name.'}),"\n",(0,i.jsxs)(t.p,{children:['When the Slider found at "UI for Post-Processing > Content > Slider" is moved, it calls ',(0,i.jsx)(t.code,{children:"UdonPostProcessing.SliderUpdated"})," via a Unity UI Event. This method sets the target PlayerData value whenever the slider is updated."]}),"\n",(0,i.jsxs)(t.p,{children:["Whenever PlayerData is updated, the ",(0,i.jsx)(t.code,{children:"OnPlayerDataUpdated"})," event will trigger on this script, and do two things:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Set the weight on the target PostProcessingVolume, which will change the local bloom strength."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Update the slider's value and position to match the stored weight. This is done so that the slider will match the value when a player first loads into the instance and the values are restored from the server."}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(96540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}},76633:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/post-processing-weight-slider-850fdb42419fccea7b360654106696f1.png"},80389:(e,t,s)=>{s.d(t,{Ay:()=>a,RM:()=>o});var n=s(74848),i=s(28453);const o=[{value:"Importing the Example",id:"importing-the-example",level:2}];function r(e){const t={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"importing-the-example",children:"Importing the Example"}),"\n",(0,n.jsx)(t.p,{children:"Follow the steps below to add this example to your Unity project:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Open ",(0,n.jsx)(t.a,{href:"https://creators.vrchat.com/sdk/example-central",children:"the Example Central Window"}),' from the window from the Unity Editor Menu under "VRChat SDK > \ud83c\udfe0 Example Central"']}),"\n",(0,n.jsx)(t.li,{children:"Find this prefab in the list or search for it by title (same as the title of this page)."}),"\n",(0,n.jsx)(t.li,{children:'Press the "Import" button to import the Unitypackage into your project.'}),"\n"]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}}}]);