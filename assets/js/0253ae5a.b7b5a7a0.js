"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[1345],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var r=t(96540);const i={},a=r.createContext(i);function d(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(a.Provider,{value:n},e.children)}},63088:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"sdk/public-sdk-api","title":"Public SDK API","description":"The VRChat SDK provides a set of interfaces and methods you can use to enhance your world and avatar build process.","source":"@site/docs/sdk/public-sdk-api.md","sourceDirName":"sdk","slug":"/sdk/public-sdk-api","permalink":"/creator-docs_ja/sdk/public-sdk-api","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1702653348000,"frontMatter":{"title":"Public SDK API","slug":"public-sdk-api","hidden":false,"createdAt":"2023-08-18T21:01:07.855Z","updatedAt":"2023-08-18T21:04:48.137Z"},"sidebar":"tutorialSidebar","previous":{"title":"Example Central","permalink":"/creator-docs_ja/sdk/example-central"},"next":{"title":"SDK Troubleshooting","permalink":"/creator-docs_ja/sdk/sdk-troubleshooting"}}');var i=t(74848),a=t(28453);const d={title:"Public SDK API",slug:"public-sdk-api",hidden:!1,createdAt:"2023-08-18T21:01:07.855Z",updatedAt:"2023-08-18T21:04:48.137Z"},s="What's available?",o={},l=[{value:"Examples",id:"examples",level:2},{value:"Getting an instance of a builder",id:"getting-an-instance-of-a-builder",level:3},{value:"Running code before the build",id:"running-code-before-the-build",level:3},{value:"Building from script",id:"building-from-script",level:3},{value:"Heads up",id:"heads-up",level:2}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The VRChat SDK provides a set of interfaces and methods you can use to enhance your world and avatar build process."}),"\n",(0,i.jsxs)(n.p,{children:["You can find the ",(0,i.jsx)(n.strong,{children:"Public SDK API"})," folder in both SDKs:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For worlds: Packages/VRChat SDK - Worlds/Editor/VRCSDK/SDK3/Public SDK API"}),"\n",(0,i.jsx)(n.li,{children:"For avatars: Packages/VRChat SDK - Avatars/Editor/VRCSDK/SDK3A/Public SDK API"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["However, most of the events and methods are shared between both the world and avatar SDKs and are defined in the ",(0,i.jsx)(n.strong,{children:"Base SDK Package"}),": ",(0,i.jsx)(n.code,{children:"Packages/VRChat SDK - Base > Editor/VRCSDK/Dependencies/VRChat/Public SDK API"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Other methods marked as ",(0,i.jsx)(n.code,{children:"[PublicAPI]"}),' are also be a part of Public SDK API. E.g., "Packages/VRChat SDK - Base/Editor/VRCSDK/Dependencies/VRChat/API/VRCApi.cs" for updating description of contents.']}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"These types are in assembly definitions that are auto referenced. If you are writing code in your own project, the types will usually be available by default. If you're writing a redistributable package and have your own assembly definition, you will need to add the appropriate assembly definition references:"}),(0,i.jsxs)(n.p,{children:["For avatars: ",(0,i.jsx)(n.code,{children:"VRC.SDK3A.Editor"}),(0,i.jsx)(n.br,{}),"\n","For worlds: ",(0,i.jsx)(n.code,{children:"VRC.SDK3.Editor"}),(0,i.jsx)(n.br,{}),"\n","For both: ",(0,i.jsx)(n.code,{children:"VRC.SDKBase.Editor"})]})]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"whats-available",children:"What's available?"})}),"\n",(0,i.jsx)(n.p,{children:"For the most up-to-date list of events and methods, we recommend looking at the files directly mentioned above."}),"\n",(0,i.jsx)(n.p,{children:"But here is a short list of what is available:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OnEnable/OnDisable events of the main SDK Panel"}),"\n",(0,i.jsx)(n.li,{children:"Build Start/End events"}),"\n",(0,i.jsx)(n.li,{children:"Upload Success/Error events"}),"\n",(0,i.jsx)(n.li,{children:"Build, Build and Test, and Build and Upload methods"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"If you run into exceptions during the build process, you can view the list of expected exceptions in the Interface definitions."})}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"getting-an-instance-of-a-builder",children:"Getting an instance of a builder"}),"\n",(0,i.jsxs)(n.p,{children:["Connecting to ",(0,i.jsx)(n.code,{children:"OnSdkPanelEnable"})," will ensure that the SDK window was opened and the builders were registered. You can then use ",(0,i.jsx)(n.code,{children:"TryGetBuilder"})," to get an instance of the builder you need."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["You can call ",(0,i.jsx)(n.code,{children:"VRCSdkControlPanel.TryGetBuilder"})," at any point in time, but it will return false if the SDK window is not open or the builder you're trying to access is not available."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:"[InitializeOnLoadMethod]\r\npublic static void RegisterSDKCallback()\r\n{\r\n    VRCSdkControlPanel.OnSdkPanelEnable += AddBuildHook;\r\n}\r\n\r\nprivate IVRCSdkAvatarBuilderApi _builder;\r\n\r\nprivate static void AddBuildHook(object sender, EventArgs e)\r\n{\r\n    VRCSdkControlPanel.TryGetBuilder<IVRCSdkAvatarBuilderApi>(out _builder);\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"running-code-before-the-build",children:"Running code before the build"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"OnSdkBuildStart"})," runs right before the SDK kicks off the build process, but after validations and Build Request Callbacks have passed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:'[InitializeOnLoadMethod]\r\npublic static void RegisterSDKCallback()\r\n{\r\n    VRCSdkControlPanel.OnSdkPanelEnable += AddBuildHook;\r\n}\r\n\r\nprivate static void AddBuildHook(object sender, EventArgs e)\r\n{\r\n    if (VRCSdkControlPanel.TryGetBuilder<IVRCSdkAvatarBuilderApi>(out var builder))\r\n    {\r\n        builder.OnSdkBuildStart += OnBuildStarted;\r\n    }\r\n}\r\n\r\nprivate static void OnBuildStarted(object sender, object target)\r\n{\r\n    Debug.Log("Building " + ((GameObject) target).name);\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"building-from-script",children:"Building from script"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:'[MenuItem("My Tools/Build Selected Avatar")]\r\npublic static async void BuildSelectedAvatar()\r\n{\r\n    var avatar = Selection.activeGameObject;\r\n    if (!VRCSdkControlPanel.TryGetBuilder<IVRCSdkAvatarBuilderApi>(out var builder)) return;\r\n    try {\r\n      await builder.BuildAndTest(avatar);\r\n    } catch (Exception e) {\r\n      Debug.LogError(e.Message);\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"heads-up",children:"Heads up"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"If you're currently using reflection to access the SDK internals, we recommend switching to the public API as soon as possible."})}),"\n",(0,i.jsxs)(n.p,{children:["We're going to make our best effort to provide a stable API, but it's still subject to change in the future. We recommend leveraging semver to define which version of the SDK your tools are compatible with. ",(0,i.jsx)(n.a,{href:"https://vcc.docs.vrchat.com/vpm/packages/#versions-and-ranges",children:"Learn more here"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);