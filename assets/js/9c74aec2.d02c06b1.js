"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[3379],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(96540);const d={},i=s.createContext(d);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},68359:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"worlds/components/textmeshpro/tmp_inputfield","title":"TMP InputField","description":"TMPInputField is an editable text input field. It should always be used instead of Unity\'s legacy UI.InputField component.","source":"@site/docs/worlds/components/textmeshpro/tmp_inputfield.md","sourceDirName":"worlds/components/textmeshpro","slug":"/worlds/components/textmeshpro/tmp_inputfield","permalink":"/creator-docs_ja/worlds/components/textmeshpro/tmp_inputfield","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1718055806000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"TMP Dropdown","permalink":"/creator-docs_ja/worlds/components/textmeshpro/tmp_dropdown"},"next":{"title":"TMP Text","permalink":"/creator-docs_ja/worlds/components/textmeshpro/tmp_text"}}');var d=n(74848),i=n(28453);const r={},o="TMP InputField",l={},c=[{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"tmp-inputfield",children:"TMP InputField"})}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.a,{href:"https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/api/TMPro.TMP_InputField.html",children:(0,d.jsx)(t.code,{children:"TMP_InputField"})})," is an editable text input field. It should always be used instead of Unity's legacy ",(0,d.jsx)(t.code,{children:"UI.InputField"})," component."]}),"\n",(0,d.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Property"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"text"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"Gets or sets the value of the input field."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"isFocused"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"Gets a value indicating whether the input field currently has focus and is able to process UI events. This field is read-only."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"readOnly"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"Gets or sets a value indicating whether the value of the input field is read-only."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"richText"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"Gets or sets a value indicating whether rich text editing is allowed."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"enable"}),(0,d.jsx)(t.td,{children:"bool"}),(0,d.jsx)(t.td,{children:"Enables/disables the attached component."})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Function"}),(0,d.jsx)(t.th,{children:"Input"}),(0,d.jsx)(t.th,{children:"Output"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SetTextWithoutNotify"}),(0,d.jsx)(t.td,{children:"string"}),(0,d.jsx)(t.td,{children:"void"}),(0,d.jsxs)(t.td,{children:["Sets the value of the input field without invoking ",(0,d.jsx)(t.code,{children:"onValueChanged"}),"."]})]})})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);